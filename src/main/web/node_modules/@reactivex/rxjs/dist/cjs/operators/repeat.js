'use strict';

exports.__esModule = true;
exports['default'] = repeat;

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

var _Subscriber2 = require('../Subscriber');

var _Subscriber3 = _interopRequireDefault(_Subscriber2);

var _schedulersImmediate = require('../schedulers/immediate');

var _schedulersImmediate2 = _interopRequireDefault(_schedulersImmediate);

function repeat() {
    var count = arguments.length <= 0 || arguments[0] === undefined ? -1 : arguments[0];

    return this.lift(new RepeatOperator(count, this));
}

var RepeatOperator = (function () {
    function RepeatOperator(count, original) {
        _classCallCheck(this, RepeatOperator);

        this.count = count;
        this.original = original;
    }

    RepeatOperator.prototype.call = function call(subscriber) {
        return new RepeatSubscriber(subscriber, this.count, this.original);
    };

    return RepeatOperator;
})();

var RepeatSubscriber = (function (_Subscriber) {
    _inherits(RepeatSubscriber, _Subscriber);

    function RepeatSubscriber(destination, count, original) {
        _classCallCheck(this, RepeatSubscriber);

        _Subscriber.call(this, destination);
        this.count = count;
        this.original = original;
        this.invalidateRepeat();
    }

    RepeatSubscriber.prototype.repeatSubscription = function repeatSubscription() {
        var state = { dest: this.destination, count: this.count, original: this.original };
        _schedulersImmediate2['default'].scheduleNow(RepeatSubscriber.dispatchSubscription, state);
    };

    RepeatSubscriber.prototype.invalidateRepeat = function invalidateRepeat() {
        var completed = this.count === 0;
        if (completed) {
            this.destination.complete();
        }
        return completed;
    };

    RepeatSubscriber.dispatchSubscription = function dispatchSubscription(_ref) {
        var dest = _ref.dest;
        var count = _ref.count;
        var original = _ref.original;

        return original.subscribe(new RepeatSubscriber(dest, count, original));
    };

    RepeatSubscriber.prototype._complete = function _complete() {
        if (!this.invalidateRepeat()) {
            this.count--;
            this.repeatSubscription();
        }
    };

    return RepeatSubscriber;
})(_Subscriber3['default']);

module.exports = exports['default'];